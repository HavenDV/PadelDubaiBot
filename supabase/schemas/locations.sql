CREATE TABLE IF NOT EXISTS public.locations (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    url text NOT NULL,

    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),

    CONSTRAINT locations_pkey PRIMARY KEY (id)
);

COMMENT ON TABLE public.locations IS 'Club locations that users can choose from, including a human-readable name and a maps URL.';

-- Enable Row Level Security
ALTER TABLE public.locations ENABLE ROW LEVEL SECURITY;

-- Column-level security: restrict access for client roles to only the safe columns
REVOKE ALL ON TABLE public.locations FROM PUBLIC, anon, authenticated;

-- Backend retains full access
GRANT ALL ON TABLE public.locations TO service_role;

-- Allow public/client read access to non-sensitive columns
GRANT SELECT (name, url) ON public.locations TO anon, authenticated;

-- Create policies
CREATE POLICY "Public locations are viewable by everyone"
ON public.locations FOR SELECT
TO authenticated, anon
USING (true);

-- Trigger to keep updated_at current on row modification (reuses public.set_updated_at)
CREATE TRIGGER set_locations_updated_at
BEFORE UPDATE ON public.locations
FOR EACH ROW
EXECUTE FUNCTION public.set_updated_at();


